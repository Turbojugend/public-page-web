{"version":3,"sources":["Components/Common/Menu/Menu.js","Components/Sections/JoinChapter/JoinChapter.js","Components/Sections/Home/Home.js","Components/Sections/CreateChapter/CreateChapter.js","App.js","serviceWorker.js","index.js"],"names":["NavLinkStyled","styled","NavLink","Menu","menuItems","name","icon","link","css","List","map","menuItem","key","to","exact","activeClassName","background","ListItem","button","ListItemIcon","ListItemText","primary","FormControlStyled","FormControl","TextFieldStyled","TextField","JoinChapter","React","useState","setCountry","setJugend","setPosition","warship","setWarship","onDrop","useCallback","acceptedFiles","useDropzone","getRootProps","getInputProps","isDragActive","noValidate","autoComplete","Grid","container","spacing","item","xs","id","label","fullWidth","required","multiline","variant","Autocomplete","options","getOptionLabel","option","renderInput","params","onChange","event","target","value","renderOption","inputValue","matches","match","parts","parse","part","index","style","fontWeight","highlight","text","margin","InputLabel","htmlFor","Input","startAdornment","InputAdornment","position","Button","color","Home","Section","div","CreateChapter","acceptRules","setAcceptRules","chapterName","setChapterName","warriorName","setWarriorName","email","setEmail","location","setLocation","formSubmitted","setFormSubmitted","onSubmit","preventDefault","Divider","href","e","v","type","FormControlLabel","control","Checkbox","checked","Alert","severity","RootDiv","MainContent","main","MainContainer","Container","useStyles","makeStyles","theme","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","display","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","App","classes","useTheme","open","setOpen","Box","component","m","className","CssBaseline","AppBar","clsx","Toolbar","IconButton","aria-label","onClick","edge","Typography","noWrap","Drawer","paper","direction","maxWidth","path","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0f346236.chunk.js","sourcesContent":["import ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport React from \"react\";\nimport NewReleasesIcon from \"@material-ui/icons/NewReleases\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport PublicIcon from \"@material-ui/icons/Public\";\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport {NavLink} from \"react-router-dom\";\nimport HomeIcon from '@material-ui/icons/Home';\nimport styled from \"@emotion/styled\";\nimport {ClassNames} from '@emotion/core';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst NavLinkStyled = styled(NavLink)`\n    text-decoration: none;\n    color: #000;\n    display: block;\n`;\n\nexport default function Menu() {\n    const menuItems = [\n        {name: 'Home', icon: <HomeIcon/>, link: '/'},\n        {name: 'News', icon: <NewReleasesIcon/>, link: '/news'},\n        {name: 'Rules', icon: <ListIcon/>, link: '/rules'},\n        {name: 'Create a chapter', icon: <AddIcon/>, link: '/create-a-chapter'},\n        {name: 'Join a chapter', icon: <PersonAddIcon/>, link: '/join-a-chapter'},\n        {name: 'Local jugends', icon: <PublicIcon/>, link: '/local-jugends'},\n        {name: 'Assport', icon: <AssignmentIndIcon/>, link: '/assport'},\n        {name: 'Communication', icon: <MailIcon/>, link: '/communications'}\n    ];\n\n    return <ClassNames>\n        {({ css }) => (\n            <List>\n                {menuItems.map((menuItem, key) => (\n                    <NavLinkStyled to={menuItem.link} key={key} exact={true} activeClassName={css({background: '#CCC'})}>\n                        <ListItem button key={menuItem.name}>\n                            <ListItemIcon>{menuItem.icon}</ListItemIcon>\n                            <ListItemText primary={menuItem.name}/>\n                        </ListItem>\n                    </NavLinkStyled>\n                ))}\n            </List>\n        )}\n    </ClassNames>\n};\n","import React, {useCallback} from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport match from \"autosuggest-highlight/match\";\nimport parse from \"autosuggest-highlight/parse\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport Button from \"@material-ui/core/Button\";\nimport {useDropzone} from \"react-dropzone\";\nimport styled from \"@emotion/styled\";\n\nconst FormControlStyled = styled(FormControl)`\n    margin: 8px;\n`;\n\nconst TextFieldStyled = styled(TextField)`\n    margin: 0 8px;\n`;\n\nexport default function JoinChapter() {\n    const [country, setCountry] = React.useState('');\n    const [jugend, setJugend] = React.useState('');\n    const [position, setPosition] = React.useState('');\n    const [warship, setWarship] = React.useState('');\n\n    const handleCountryChange = event => {\n        setCountry(event.target.value);\n    };\n\n    const handleJugendChange = event => {\n        setJugend(event.target.value);\n    };\n\n    const handlePositionChange = event => {\n        setPosition(event.target.value);\n    };\n\n    const handleWarshipChange = event => {\n        setWarship(event.target.value);\n    };\n\n    const countryList = [\n        {name: 'Country 1'},\n        {name: 'Country 2'},\n        {name: 'Country 3'},\n    ];\n\n    const jugendList = [\n        {name: 'Jugend 1'},\n        {name: 'Jugend 2'},\n        {name: 'Jugend 3'},\n    ];\n\n    const positionList = [\n        {name: 'Position 1'},\n        {name: 'Position 2'},\n        {name: 'Position 3'},\n    ];\n\n    const warshipList = [\n        {name: 'Warship 1'},\n        {name: 'Warship 2'},\n        {name: 'Warship 3'},\n    ];\n\n    const onDrop = useCallback(acceptedFiles => {\n        // Do something with the files\n    }, []);\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop});\n\n    return <form noValidate autoComplete=\"off\">\n        <Grid container spacing={3}>\n            <Grid item xs={12}>\n                <p>If you want to join an existing jugend please get in touch with the local\n                    president.</p>\n                <p>if you want to start a new chapter please send a mail to\n                    (jugendwart@turbojugend.org)</p>\n            </Grid>\n            <Grid item xs={6}>\n                <TextFieldStyled id=\"warrior-name\" label=\"Warrior name\" fullWidth required/>\n                <TextFieldStyled id=\"optional-teaser\" label=\"Optional teaser\" multiline fullWidth required/>\n                <TextFieldStyled id=\"first-name\" label=\"First name\" fullWidth required/>\n                <TextFieldStyled id=\"last-name\" label=\"Last name\" fullWidth required/>\n                <TextFieldStyled id=\"street\" label=\"Street\" fullWidth/>\n                <TextFieldStyled id=\"zip-code\" label=\"Zip code\" fullWidth/>\n                <TextFieldStyled id=\"city\" label=\"City\" fullWidth/>\n                <FormControlStyled variant=\"outlined\" fullWidth={true}>\n                    <Autocomplete\n                        id=\"country\"\n                        options={countryList}\n                        getOptionLabel={option => option.name}\n                        renderInput={params => <TextField {...params} label=\"Country\" variant=\"outlined\" />}\n                        onChange={handleCountryChange}\n                        renderOption={(option, {inputValue}) => {\n                            const matches = match(option.name, inputValue);\n                            const parts = parse(option.name, matches);\n\n                            return (\n                                <div>\n                                    {parts.map((part, index) => (\n                                        <span key={index} style={{fontWeight: part.highlight ? 700 : 400}}>{part.text}</span>\n                                    ))}\n                                </div>\n                            );\n                        }}\n                    />\n                </FormControlStyled>\n                <FormControlStyled variant=\"outlined\" fullWidth={true}>\n                    <Autocomplete\n                        id=\"jugend\"\n                        options={jugendList}\n                        getOptionLabel={option => option.name}\n                        onChange={handleJugendChange}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Jugend\" variant=\"outlined\" margin=\"normal\"/>\n                        )}\n                        renderOption={(option, {inputValue}) => {\n                            const matches = match(option.name, inputValue);\n                            const parts = parse(option.name, matches);\n\n                            return (\n                                <div>\n                                    {parts.map((part, index) => (\n                                        <span key={index} style={{fontWeight: part.highlight ? 700 : 400}}>{part.text}</span>\n                                    ))}\n                                </div>\n                            );\n                        }}\n                    />\n                </FormControlStyled>\n                <FormControlStyled variant=\"outlined\" fullWidth={true}>\n                    <Autocomplete\n                        id=\"position\"\n                        options={positionList}\n                        getOptionLabel={option => option.name}\n                        onChange={handlePositionChange}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Position\" variant=\"outlined\" margin=\"normal\"/>\n                        )}\n                        renderOption={(option, {inputValue}) => {\n                            const matches = match(option.name, inputValue);\n                            const parts = parse(option.name, matches);\n\n                            return (\n                                <div>\n                                    {parts.map((part, index) => (\n                                        <span key={index} style={{fontWeight: part.highlight ? 700 : 400}}>{part.text}</span>\n                                    ))}\n                                </div>\n                            );\n                        }}\n                    />\n                </FormControlStyled>\n                <TextFieldStyled id=\"hobbies\" label=\"Hobbies\" multiline fullWidth/>\n                <FormControlStyled fullWidth={true}>\n                    <InputLabel htmlFor=\"input-with-icon-adornment\">Mobile phone</InputLabel>\n                    <Input\n                        id=\"input-with-icon-adornment\"\n                        fullWidth\n                        startAdornment={\n                            <InputAdornment position=\"start\">\n                                <PhoneIcon/>\n                            </InputAdornment>\n                        }\n                    />\n                </FormControlStyled>\n                <TextFieldStyled id=\"soccer-team\" label=\"Soccer team\" fullWidth/>\n                <FormControlStyled variant=\"outlined\" fullWidth={true}>\n                    <Autocomplete\n                        id=\"warship\"\n                        options={warshipList}\n                        getOptionLabel={option => option.name}\n                        onChange={handleWarshipChange}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Warship\" variant=\"outlined\"\n                                       margin=\"normal\"/>\n                        )}\n                        renderOption={(option, {inputValue}) => {\n                            const matches = match(option.name, inputValue);\n                            const parts = parse(option.name, matches);\n\n                            return (\n                                <div>\n                                    {parts.map((part, index) => (\n                                        <span key={index} style={{fontWeight: part.highlight ? 700 : 400}}>{part.text}</span>\n                                    ))}\n                                </div>\n                            );\n                        }}\n                    />\n                </FormControlStyled>\n                <TextFieldStyled id=\"warship\" label=\"Favourite warship\" fullWidth value={warship}/>\n                <TextFieldStyled id=\"optional-headline\" label=\"Optional headline\" fullWidth/>\n                <TextFieldStyled id=\"optional-text-1\" label=\"Optional text 1\" multiline fullWidth/>\n                <TextFieldStyled id=\"optional-text-2\" label=\"Optional text 2\" multiline fullWidth/>\n            </Grid>\n            <Grid item xs={6}>\n                <div {...getRootProps()}>\n                    <input {...getInputProps()} />\n                    {\n                        isDragActive ?\n                            <p>Drop the files here ...</p> :\n                            <p>Drag 'n' drop some files here, or click to select files</p>\n                    }\n                </div>\n                <TextFieldStyled id=\"image-caption\" label=\"Image caption\" multiline fullWidth/>\n            </Grid>\n            <Grid item xs={12}>\n                <Button variant=\"contained\" color=\"primary\">Send</Button>\n            </Grid>\n        </Grid>\n    </form>\n};\n","import React from 'react';\n\nexport default function Home() {\n    return (\n        <div>\n            <h1>Turbojugend Home</h1>\n        </div>\n    );\n}\n","import React, {useState} from \"react\";\nimport styled from \"@emotion/styled\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport match from \"autosuggest-highlight/match\";\nimport parse from \"autosuggest-highlight/parse\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nconst FormControlStyled = styled(FormControl)`\n    margin: 8px;\n`;\n\nconst TextFieldStyled = styled(TextField)`\n    margin: 0 8px;\n`;\n\nconst Section = styled.div`\n    margin-bottom: 10px;\n`;\n\nexport default function CreateChapter() {\n    const [acceptRules, setAcceptRules] = useState(false);\n    const [chapterName, setChapterName] = useState('');\n    const [warriorName, setWarriorName] = useState('');\n    const [email, setEmail] = useState('');\n    const [location, setLocation] = useState();\n    const [formSubmitted, setFormSubmitted] = useState(false);\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        setFormSubmitted(true);\n    }\n\n    const locationList = [\n        {name: 'Barcelona'},\n        {name: 'Oslo'},\n        {name: 'Hamburg'},\n    ]\n\n    return <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <div>\n            <h1>Start your own Turbojugend</h1>\n            <Divider/>\n            <Section>\n                <h2>Join the worldwide Turbojugend</h2>\n                <p>\n                    Check the <a href=\"http://turbojugend.org/map/\">Turbojugend Map</a> for the chapters in your area\n                    and reach out to the chapters close to you:\n                </p>\n                <ul>\n                    <li>If there are no chapters in your area: Start your own.</li>\n                    <li>If there is a chapter close to you: Join them.</li>\n                    <li>If you do not want to join your local chapters: Tell us why.</li>\n                </ul>\n            </Section>\n            <Divider/>\n            <Section>\n                <h2>Setup your chapter</h2>\n                <p>\n                    Check the <a href=\"http://turbojugend.org/map/\">Turbojugend Map</a> for the chapters in your area\n                    and reach out to the chapters close to you:\n                </p>\n                <ul>\n                    <li><a href=\"http://www.turbojugend.org/downloads/Turbojugend-Guidelines.pdf\">Check our\n                        guidelines for new chapters</a> and choose your chapter name accordingly.\n                    </li>\n                    <li>Tell us where your chapter will be located.</li>\n                </ul>\n                <TextFieldStyled\n                    label=\"Chapter name\"\n                    fullWidth\n                    required\n                    value={chapterName}\n                    onChange={e => setChapterName(e.target.value)}\n                />\n                <FormControlStyled variant=\"outlined\" fullWidth={true}>\n                    <Autocomplete\n                        options={locationList}\n                        getOptionLabel={option => option.name}\n                        renderInput={params => <TextField {...params} label=\"Location\" variant=\"outlined\" />}\n                        onChange={(e, v) => setLocation(v)}\n                        renderOption={(option, {inputValue}) => {\n                            const matches = match(option.name, inputValue);\n                            const parts = parse(option.name, matches);\n\n                            return (\n                                <div>\n                                    {parts.map((part, index) => (\n                                        <span key={index} style={{fontWeight: part.highlight ? 700 : 400}}>{part.text}</span>\n                                    ))}\n                                </div>\n                            );\n                        }}\n                    />\n                </FormControlStyled>\n            </Section>\n            <Divider/>\n            <Section>\n                <h2>Become the president</h2>\n                <div>\n                    <TextFieldStyled\n                        label=\"Warrior name\"\n                        fullWidth\n                        required\n                        value={warriorName}\n                        onChange={e => setWarriorName(e.target.value)}\n                    />\n                    <TextFieldStyled\n                        label=\"Email\"\n                        fullWidth\n                        required\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                        type=\"email\"\n                    />\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={acceptRules}\n                                onChange={e => setAcceptRules(e.target.checked)}\n                                name=\"checkedB\"\n                                color=\"primary\"\n                            />\n                        }\n                        label=\"Approve our rules\"\n                    />\n                    <Grid item xs={12}>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\">Send</Button>\n                    </Grid>\n                </div>\n            </Section>\n        </div>\n        {formSubmitted &&\n            <Alert severity=\"success\">The information goes to the turbojugend, when all it's okey we tell you!</Alert>\n        }\n\n        {formSubmitted &&\n        <ul>\n            <li>Chapter name: {chapterName}</li>\n            <li>Location: {location.name}</li>\n            <li>Warrior name: {warriorName}</li>\n            <li>Email: {email}</li>\n            <li>Accepted rules: {acceptRules ? 'YES' : 'NO'}</li>\n        </ul>\n        }\n    </form>\n};\n","import React from 'react'\nimport './App.css';\nimport clsx from 'clsx';\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport Menu from \"./Components/Common/Menu/Menu\";\nimport JoinChapter from \"./Components/Sections/JoinChapter/JoinChapter\";\nimport {BrowserRouter as Router, Route, Switch,} from \"react-router-dom\";\nimport Home from \"./Components/Sections/Home/Home\";\nimport styled from '@emotion/styled';\nimport CreateChapter from \"./Components/Sections/CreateChapter/CreateChapter\";\n\nconst drawerWidth = 260;\n\nconst RootDiv = styled.div`\n    display: flex;\n`;\n\nconst MainContent = styled.main`\n   flex-grow: 1;\n   padding: 24px;\n`;\n\nconst MainContainer = styled(Container)`\n    border: 1px solid #000;\n    padding: 20px;\n`;\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9) + 1,\n        },\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n    },\n}));\n\nfunction App() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(true);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <Router>\n            <Box component=\"span\" m={1}>\n                <div className=\"App\">\n                    <RootDiv>\n                        <CssBaseline/>\n                        <AppBar\n                            style={{\"background\":\"black\"}}\n                            position=\"fixed\"\n                            className={clsx(classes.appBar, {\n                                [classes.appBarShift]: open,\n                            })}\n                        >\n                            <Toolbar>\n                                <IconButton\n                                    color=\"inherit\"\n                                    aria-label=\"open drawer\"\n                                    onClick={handleDrawerOpen}\n                                    edge=\"start\"\n                                    className={clsx(classes.menuButton, {\n                                        [classes.hide]: open,\n                                    })}\n                                >\n                                    <MenuIcon/>\n                                </IconButton>\n                                <Typography variant=\"h6\" noWrap>\n                                    Turbojugend\n                                </Typography>\n                            </Toolbar>\n                        </AppBar>\n                        <Drawer\n                            variant=\"permanent\"\n                            className={clsx(classes.drawer, {\n                                [classes.drawerOpen]: open,\n                                [classes.drawerClose]: !open,\n                            })}\n                            classes={{\n                                paper: clsx({\n                                    [classes.drawerOpen]: open,\n                                    [classes.drawerClose]: !open,\n                                }),\n                            }}\n                        >\n                            <div className={classes.toolbar}>\n                                <IconButton onClick={handleDrawerClose}>\n                                    {theme.direction === 'rtl' ? <ChevronRightIcon/> : <ChevronLeftIcon/>}\n                                </IconButton>\n                            </div>\n                            <Divider/>\n                            <Menu/>\n                        </Drawer>\n                        <MainContent>\n                            <div className={classes.toolbar}/>\n                            <MainContainer maxWidth=\"sm\">\n                                <Switch>\n                                    <Route path=\"/create-a-chapter\">\n                                        <CreateChapter/>\n                                    </Route>\n                                    <Route path=\"/join-a-chapter\">\n                                        <JoinChapter/>\n                                    </Route>\n                                    <Route path=\"/\">\n                                        <Home/>\n                                    </Route>\n                                </Switch>\n                            </MainContainer>\n                        </MainContent>\n                    </RootDiv>\n                </div>\n            </Box>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}